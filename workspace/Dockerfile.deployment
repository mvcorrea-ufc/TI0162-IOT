# ESP32-C3 IoT System Deployment Container
FROM rust:1.75-slim

# Install system dependencies for embedded development
RUN apt-get update && apt-get install -y \
    pkg-config \
    libudev-dev \
    libssl-dev \
    curl \
    git \
    python3 \
    python3-pip \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Install ESP32 toolchain and tools
RUN curl -LO https://github.com/esp-rs/espup/releases/latest/download/espup-x86_64-unknown-linux-gnu \
    && chmod +x espup-x86_64-unknown-linux-gnu \
    && mv espup-x86_64-unknown-linux-gnu /usr/local/bin/espup

# Install Rust ESP32 toolchain
RUN espup install --targets esp32c3

# Install espflash for programming ESP32-C3
RUN cargo install espflash --locked

# Install probe-rs for advanced debugging (optional)
RUN cargo install probe-rs --locked --features cli

# Set up Rust environment for ESP32
ENV RUSTUP_TOOLCHAIN=esp
ENV PATH="/root/.rustup/toolchains/esp/bin:${PATH}"

# Create working directory
WORKDIR /workspace

# Copy project files
COPY . .

# Ensure cargo config is properly set up
RUN mkdir -p .cargo && echo '[build]\ntarget = "riscv32imc-unknown-none-elf"' > .cargo/config.toml

# Build the main application for ESP32-C3
RUN . /root/export-esp.sh && cargo build --release --bin main-app

# Default command for container
CMD ["bash"]