[workspace]
resolver = "2"
members = [
    # ==== APPLICATION LAYER ====
    # NO DEPENDENCIES (main-nodeps must stay isolated)
    "apps/main-nodeps",
    # Minimal Dependencies Application Layer
    "apps/main-min",
    # Full Dependencies Application Layer - Complete IoT Platform
    "apps/main-app",
    
    # ==== CORE MODULES ====
    "core/iot-common",
    "core/iot-config", 
    "core/iot-container",
    "core/iot-hal",
    "core/iot-performance",
    "core/iot-storage",
    
    # ==== DRIVER MODULES ====
    "drivers/bme280-embassy",
    "drivers/mqtt-embassy",
    "drivers/serial-console-embassy", 
    "drivers/wifi-embassy",
    
    # Note: Supporting modules (blinky, examples, tests) are 
    # standalone and build independently with their own dependencies
]

# Exclude supporting modules so they build independently
exclude = [
    "supporting/modules/esp32c3-hardware-validator",
    "supporting/modules/esp32c3-environmental-monitor",
    "supporting/modules/esp32c3-blocking-wifi",
    "supporting/modules/bme280-algorithms-test",
    "supporting/modules/esp32c3-embassy-wifi",
    "supporting/modules/esp32c3-modular-wifi"
]

[workspace.dependencies]
# ESP32-C3 Hardware Abstraction Layer - WORKING VERSION (portable-atomic fixed!)
esp-hal = { version = "1.0.0-rc.0", features = ["esp32c3", "unstable"] }
esp-hal-embassy = { version = "0.9.0", features = ["esp32c3"] }
esp-rom-sys = { version = "0.1", features = ["esp32c3"] }

# Embassy Async Framework - ESP-HAL-EMBASSY 0.9.0 COMPATIBLE VERSIONS with explicit features
embassy-executor = { version = "0.7", default-features = false, features = ["task-arena-size-20480"] }
embassy-time = { version = "0.4", default-features = false }
embassy-sync = { version = "0.6.2", default-features = false }
embassy-futures = { version = "0.1.2", default-features = false }

# Network and WiFi - for MQTT/WiFi modules (ESP-HAL-EMBASSY 0.9.0 compatible versions)
embassy-net = { version = "0.6", default-features = false, features = ["proto-ipv4", "medium-ethernet", "tcp", "udp", "dhcpv4"] }
smoltcp = { version = "0.12.0", default-features = false, features = ["medium-ethernet", "proto-dhcpv4", "proto-ipv4", "socket-tcp", "socket-udp"] }
esp-wifi = { version = "0.15.0", features = ["esp32c3", "wifi", "smoltcp"] }

# UART and async I/O
embedded-io-async = { version = "0.6" }
embedded-hal-async = { version = "1.0" }
embassy-usb = { version = "0.3", default-features = false }

# String processing and utilities
heapless = { version = "0.8" }
static_cell = { version = "2.1" }
nb = { version = "1.0" }

# Memory allocation and storage
esp-alloc = { version = "0.8.0" }
esp-storage = { version = "0.3.0", features = ["esp32c3"] }
embedded-storage = { version = "0.3.1" }
sequential-storage = { version = "3.0.0" }

# Debugging and panic handling - RTT standardized
rtt-target = { version = "0.5" }
panic-rtt-target = { version = "0.1" }

# BME280 sensor
bme280-rs = { version = "0.3", features = ["async"] }

# JSON serialization for MQTT
serde = { version = "1.0", default-features = false, features = ["derive"] }
serde-json-core = { version = "0.6" }

# Additional utilities
critical-section = { version = "1.2", default-features = false }
async-trait = { version = "0.1", default-features = false }

# Force portable-atomic configuration for ESP32-C3 (explicit features for single-core)
portable-atomic = { version = "1.11", default-features = false, features = ["unsafe-assume-single-core"] }

[workspace.metadata.esp-hal-settings]
esp32c3_direct_boot = true

# Unified profiles at workspace level
[profile.dev]
opt-level = "z"
debug = true

[profile.release]
opt-level = "z"
debug = false
lto = true
codegen-units = 1
panic = "abort"